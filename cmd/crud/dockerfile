# Running the application with port 3000 mapped to the host:
# $ docker run -d --name crud-amd64 -p 3000:3000 crud-amd64:1

# Stage 0
#
# Build the Go Binary.
#
FROM golang

ENV CGO_ENABLED 0

RUN mkdir -p /go/src/github.com/ardanlabs/service
WORKDIR /go/src/github.com/ardanlabs/service
ADD . /go/src/github.com/ardanlabs/service

RUN go build -ldflags "-s -w -X main.build=$(git rev-parse HEAD)" -a -tags netgo github.com/ardanlabs/service/cmd/crud

# Stage 1
#
# Run the Go Binary in Alpine.
#
FROM alpine
MAINTAINER William Kennedy <bill@ardanlabs.com>
EXPOSE 3000
COPY --from=0 /go/src/github.com/ardanlabs/service/crud /bin/
ENTRYPOINT ["/bin/crud"]